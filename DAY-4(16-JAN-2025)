Given an array arr of 0s and 1s. Find and return the length of the longest subarray with equal number of 0s and 1s.
Examples:
Input: arr[] = [1, 0, 1, 1, 1, 0, 0]
Output: 6
Explanation: arr[1...6] is the longest subarray with three 0s and three 1s.
Input: arr[] = [0, 0, 1, 1, 0]
Output: 4
Explnation: arr[0...3] or arr[1...4] is the longest subarray with two 0s and two 1s.

Output:
  int maxLen(vector<int> &arr) {
        // Your code here
        int n=arr.size();
        int ans=0;
        int sum=0;
        
        unordered_map <int, int> mp;
        mp[0] = -1;
        for(int i=0;i<n;i++)
        {
            sum+=(arr[i]?1:-1);
            if(mp.find(sum) != mp.end()) ans = max(ans, i - mp[sum]);
            else mp[sum] = i;
        }
        return ans;
    }
