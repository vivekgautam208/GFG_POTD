Question:
Given the head of a singly linked list, your task is to left rotate the linked list k times.
Examples:
Input: head = 10 -> 20 -> 30 -> 40 -> 50, k = 4
Output: 50 -> 10 -> 20 -> 30 -> 40
Explanation:
Rotate 1: 20 -> 30 -> 40 -> 50 -> 10
Rotate 2: 30 -> 40 -> 50 -> 10 -> 20
Rotate 3: 40 -> 50 -> 10 -> 20 -> 30
Rotate 4: 50 -> 10 -> 20 -> 30 -> 40

Input: head = 10 -> 20 -> 30 -> 40 , k = 6
Output: 30 -> 40 -> 10 -> 20 
 
Constraints:

1 <= number of nodes <= 105
0 <= k <= 109
0 <= data of node <= 109
Solution:
 Node* rotate(Node* head, int k) {
        // Your code here
        int n = 0;
        Node* tail = head;
        Node* tmp = head;
        while(tmp){
            n++;
            if(tmp->next==NULL) tail = tmp;
            tmp=tmp->next;
                  }
        tmp = head;
        k= k%n;
        if(k==0) return head;
        tail->next = head;
        while(k>1){
            tmp = tmp->next;
            k--;
        }
        head = tmp->next;
        tmp->next=NULL;
        return head;
        }
