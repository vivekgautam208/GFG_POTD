Given Question:
Given an array arr[] of non-negative numbers. The task is to find the first equilibrium point in the array.
The equilibrium point in an array is an index (0-based indexing) such that the sum of all elements before that index is the same as the sum of elements after it.
Return -1 if no such point exists. 
Examples:
Input: arr[] = [1, 2, 0, 3]
Output: 2 
Explanation: The sum of left of index 2 is 1 + 2 = 3 and sum on right of index 2 is 0 + 3 = 3.
APPROACH:
This is an easy question first we simpily find the sum of the array and after that we run an another loop,
and substracts the array value one by one if we get the leftSum == totalSum the return the index value otherwise -1;

CODE:
 int findEquilibrium(vector<int> &arr) {
        // code here
       int totalSum = 0;
        int leftSum = 0;

        for (int num : arr) 
        {
        totalSum += num;
        }

        for (int i = 0; i < arr.size(); i++) {
            totalSum -= arr[i];

            if (leftSum == totalSum) {
            return i;
            }

            leftSum += arr[i];
    }

    return -1;
}
